# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  - type: web
    runtime: docker
    name: bot
    region: frankfurt
    plan: free
    rootDir: telegram_bot
    dockerfilePath: ./telegram_bot/Dockerfile
    envVars:
      - key: BOT_TOKEN
        sync: true
      - key: PORT
        value: '10000:10000'
    disk:
      name: telegram_bot
      mount_path: /telegram_bot

  - type: web
    runtime: docker
    name: web
    region: frankfurt
    plan: free
    rootDir: web_service
    dockerfilePath: ./web_service/Dockerfile
    envVars:
      - key: HOST_DB
        sync: true
      - key: PORT_DB
        sync: true
      - key: USER_DB
        sync: true
      - key: PASSWORD_DB
        sync: true
      - key: NAME_DB
        sync: true
      - key: PORT
        value: '8000:8000'


databases:
- name: postgres
  databaseName: nlp_project_gmuh
  user: nlp_project_gmuh_user
  ipAllowList:
    - source: 0.0.0.0
      description: everyone

# secrets:
#   db-password:
#     file: .configs/db_password.txt

# networks:
#   nlp-project-network:
#     name: nlp-project-network
#     driver: bridge
#     attachable: true